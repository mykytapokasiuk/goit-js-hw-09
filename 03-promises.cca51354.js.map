{"mappings":"oeAAA,MAAMA,EAAO,CACXC,uBAAwBC,SAASC,cAAc,gBAC/CC,sBAAuBF,SAASC,cAAc,eAC9CE,aAAcH,SAASC,cAAc,QACrCG,gBAAiBJ,SAASC,cAAc,gBACxCI,oBAAqBL,SAASM,eAAe,mBAC7CC,oBAAqBP,SAASQ,iBAAiB,UAC/CC,iBAAkBT,SAASC,cAAc,SACzCS,eAAgBV,SAASC,cAAc,WCRzC,IAAAU,EAAAC,EAAA,SAWA,MAAMC,EAAW,CAACC,EAAOC,KACvBD,EAAME,iBACN,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvBN,EAAMO,cACV,GAAIH,EAAMI,MAAQ,GAAKH,EAAKG,MAAQ,GAAKF,EAAOE,OAAS,EACvDX,EAAAY,OAAOC,QAAQ,iCAAkC,CAC/CC,MAAO,QACPC,oBAAoB,EACpBC,SAAU,eACVC,SAAU,OACVC,QAAS,IACTC,SAAU,OACVC,aAAc,MACdC,kBAAmB,qBAIvB,IAAK,IAAIC,EAAI,EAAGC,EAAI,EAAGD,GAAKb,EAAOE,MAAOW,IAAKC,KAAOf,EAAKG,MAAO,CAEhEP,EAASkB,IADUf,EAAMI,MAAQY,GAE9BC,MAAK,EAACR,SAAEA,EAAQT,MAAEA,MACjBP,EAAAY,OAAOa,QAAQ,qBAAqBT,QAAeT,MAAW,CAC5DO,MAAO,QACPE,SAAU,YACVC,SAAU,OACVE,SAAU,OACVC,aAAc,OAChB,IAEDM,OAAM,EAACV,SAAEA,EAAQT,MAAEA,MAClBP,EAAAY,OAAOC,QAAQ,oBAAoBG,QAAeT,MAAW,CAC3DO,MAAO,QACPE,SAAU,YACVC,SAAU,OACVE,SAAU,OACVC,aAAc,OAChB,GAEN,GCxCF,SAASO,EAAcX,EAAUT,GAC/B,MAAMqB,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,CACNhB,SAAUA,EACVT,MAAOA,IAGT0B,EAAO,CACLjB,SAAUA,EACVT,MAAOA,GACT,GAEDA,EAAA,GAEP,CAEApB,EAAKW,iBAAiBqC,iBAAiB,UAAUhC,IAC/CD,EAASC,EAAOwB,EAAA","sources":["src/js/references.js","src/js/functions/functions-promises.js","src/js/03-promises.js"],"sourcesContent":["const refs = {\n  start_color_change_btn: document.querySelector('[data-start]'),\n  stop_color_change_btn: document.querySelector('[data-stop]'),\n  body_element: document.querySelector('body'),\n  start_timer_btn: document.querySelector('[data-start]'),\n  input_timer_element: document.getElementById('datetime-picker'),\n  span_timer_elements: document.querySelectorAll('.value'),\n  prs_form_element: document.querySelector('.form'),\n  prs_submit_btn: document.querySelector('button'),\n};\n\nexport { refs };\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n/**\n * @callback callback\n */\n/**\n * Gets form data, calls the callback function as many times as entered in the amount field, handles callback(promise)\n * @function onSubmit\n * @param {event} event\n * @param {callback} callback\n */\nconst onSubmit = (event, callback) => {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  if (delay.value < 0 || step.value < 0 || amount.value <= 0) {\n    Notify.failure('Please choose a positive value', {\n      width: '260px',\n      showOnlyTheLastOne: true,\n      position: 'right-bottom',\n      distance: '40px',\n      timeout: 2000,\n      fontSize: '15px',\n      borderRadius: '8px',\n      cssAnimationStyle: 'from-bottom',\n    });\n    return;\n  }\n  for (let i = 1, j = 0; i <= amount.value; i++, j += ~~step.value) {\n    let totalDelay = ~~delay.value + j;\n    callback(i, totalDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n          width: '260px',\n          position: 'right-top',\n          distance: '40px',\n          fontSize: '15px',\n          borderRadius: '8px',\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          width: '260px',\n          position: 'right-top',\n          distance: '40px',\n          fontSize: '15px',\n          borderRadius: '8px',\n        });\n      });\n  }\n};\n\nexport { onSubmit };\n","import { refs } from './references';\nimport { onSubmit } from './functions/functions-promises';\n\n/**\n * Creates promise\n * @function createPromise\n * @param {number} position Number of promise\n * @param {number} delay Form data (first delay + delay step)\n * @returns {Promise} Promise\n */\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position: position,\n          delay: delay,\n        });\n      } else {\n        reject({\n          position: position,\n          delay: delay,\n        });\n      }\n    }, delay);\n  });\n}\n\nrefs.prs_form_element.addEventListener('submit', event => {\n  onSubmit(event, createPromise);\n});\n"],"names":["$11081156de287a39$export$21666b427502ea6d","start_color_change_btn","document","querySelector","stop_color_change_btn","body_element","start_timer_btn","input_timer_element","getElementById","span_timer_elements","querySelectorAll","prs_form_element","prs_submit_btn","$iQIUW","parcelRequire","$0ba26dbd713222bb$export$307d29742c654737","event","callback","preventDefault","elements","delay","step","amount","currentTarget","value","Notify","failure","width","showOnlyTheLastOne","position","distance","timeout","fontSize","borderRadius","cssAnimationStyle","i","j","then","success","catch","$47d4ff9957288465$var$createPromise","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener"],"version":3,"file":"03-promises.cca51354.js.map"}